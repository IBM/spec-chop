#!/usr/bin/env sh
# 
# SPEC-CHOP: ChopStiX support scripts to run SPEC benchmarks 
#
# Author: Ramon Bertran Monfort <rbertra@us.ibm.com>
#
# Copyright 2018 IBM Corporation
# IBM (c) 2018 All rights reserved
#

##############################################################################
# MAIN CONFIGURATION SETTINGS (edit for your needs)
##############################################################################

#
# Main directory to store output/results/traces etc. 
#
export SPEC_CHOP_DB_BASEPATH=/gpfs/wscgpfs02/bertran/results/SPEC2017/AT11.0/

#
# SPEC Installation directory
#
export SPEC_CHOP_SPEC_INSTALL_DIR=/gpfs/wscgpfs02/bertran/spec/

#
# SPEC Configuration file
#
export SPEC_CHOP_CONFIGURATION_FILE="$SPEC_CHOP_PATH/config/power9-at11.cfg"

#
# ChopStiX installation setup file
#
export SPEC_CHOP_CHOPSTIX_SETUP_FILE=/gpfs/wscgpfs02/bertran/chopstix/share/chopstix/setup.sh

#
# Microprobe repository path
#
# Assuming a development mode Microprobe installation. I.e. The GIT repository
# has been cloned and the necessary target definition have been also checked
# out.
#
export SPEC_CHOP_MICROPROBE_PATH=/gpfs/wscgpfs02/bertran/microprobe_private/

##############################################################################
# DEFAULT CONFIGURATION SETTINGS 
#
# Default options if not provided via environment variables
#
##############################################################################
set +u
if [ -z "$SPEC_CHOP_MAX_LSF_JOBS" ]; then
    SPEC_CHOP_MAX_LSF_JOBS=10
fi

if [ -z "$SPEC_CHOP_LSF_MAX_TIME" ]; then
    # Half day
    SPEC_CHOP_LSF_MAX_TIME=720
fi

if [ -z "$SPEC_CHOP_BENCHMARKS" ]; then
    SPEC_CHOP_BENCHMARKS=""
    SPEC_CHOP_BENCHMARKS="$SPEC_CHOP_BENCHMARKS "
    SPEC_CHOP_BENCHMARKS="$SPEC_CHOP_BENCHMARKS 600.perlbench_s"
    SPEC_CHOP_BENCHMARKS="$SPEC_CHOP_BENCHMARKS 602.gcc_s"
    SPEC_CHOP_BENCHMARKS="$SPEC_CHOP_BENCHMARKS 605.mcf_s"
    SPEC_CHOP_BENCHMARKS="$SPEC_CHOP_BENCHMARKS 620.omnetpp_s"
    SPEC_CHOP_BENCHMARKS="$SPEC_CHOP_BENCHMARKS 623.xalancbmk_s"
    SPEC_CHOP_BENCHMARKS="$SPEC_CHOP_BENCHMARKS 625.x264_s"
    SPEC_CHOP_BENCHMARKS="$SPEC_CHOP_BENCHMARKS 631.deepsjeng_s"
    SPEC_CHOP_BENCHMARKS="$SPEC_CHOP_BENCHMARKS 641.leela_s"
    SPEC_CHOP_BENCHMARKS="$SPEC_CHOP_BENCHMARKS 648.exchange2_s"
    SPEC_CHOP_BENCHMARKS="$SPEC_CHOP_BENCHMARKS 657.xz_s"
    SPEC_CHOP_BENCHMARKS="$SPEC_CHOP_BENCHMARKS 998.specrand_is"
    export SPEC_CHOP_BENCHMARKS="$SPEC_CHOP_BENCHMARKS"
fi

if [ -z "$SPEC_CHOP_BENCH_NAME" ]; then
    export SPEC_CHOP_BENCH_NAME=name_not_set
fi

if [ -z "$SPEC_CHOP_BENCH_REPETITIONS" ]; then
    export SPEC_CHOP_BENCH_REPETITIONS=1
fi

if [ -z "$SPEC_CHOP_BENCH_INPUT_SIZE" ]; then
    export SPEC_CHOP_BENCH_INPUT_SIZE=ref
fi

if [ -z "$SPEC_CHOP_SAMPLE_EVENT" ]; then
    export SPEC_CHOP_SAMPLE_EVENT=instructions
fi

if [ -z "$SPEC_CHOP_SAMPLE_PERIOD" ]; then
    export SPEC_CHOP_SAMPLE_PERIOD=100000000
fi

if [ -z "$SPEC_CHOP_MAX_FUNCTIONS" ]; then
    export SPEC_CHOP_MAX_FUNCTIONS=10
fi

if [ -z "$SPEC_CHOP_MIN_FUNCTION_SIZE" ]; then
    export SPEC_CHOP_MIN_FUNCTION_SIZE=10
fi

if [ -z "$SPEC_CHOP_MIN_COVERAGE" ]; then
    export SPEC_CHOP_MIN_COVERAGE=50
fi

if [ -z "$SPEC_CHOP_OPTIONS_TRACE" ]; then
    export SPEC_CHOP_OPTIONS_TRACE="-prob 0.1 -max-traces 10 -gzip"
fi
set -u
##############################################################################
# OTHER LESS COMMON CONFIGURATION SETTINGS
##############################################################################

export SPEC_CHOP_TIMEOUT=8h
export SPEC_CHOP_MIN_SESSIONS=1
export SPEC_CHOP_LSF_DEFAULT_ENVIRON="LSF_SMT=off,LSF_CPU_FREQ=performance,"

##############################################################################
# DERIVED SETTINGS -- DO NOT TOUCH!!! 
##############################################################################

if [ -n "$SPEC_CHOP_BENCH_NAME" ]; then
    SPEC_CHOP_BENCH_NAME=$(echo "$SPEC_CHOP_BENCH_NAME" | sed -e "s/ /_/g")
    export SPEC_CHOP_BENCH_NAME
fi

SPEC_CHOP_HOSTNAME="$(hostname)"
export SPEC_CHOP_HOSTNAME

SPEC_CHOP_SCRIPTNAME="$(basename "$0")"
export SPEC_CHOP_SCRIPTNAME

scError() {
    timestamp=$(date "+%Y%m%d%H%M%S")
    echo "[$timestamp - $SPEC_CHOP_HOSTNAME] SPEC-CHOP: $SPEC_CHOP_SCRIPTNAME: $* . Exiting ..." >&2
    exit 1
}

scPrint() {
    timestamp=$(date "+%Y%m%d%H%M%S")
    echo "[$timestamp - $SPEC_CHOP_HOSTNAME] SPEC-CHOP: $SPEC_CHOP_SCRIPTNAME: $*" >&2
}


if [ ! -r "$SPEC_CHOP_CONFIGURATION_FILE" ]; then
    scError "Unable to read the SPEC_CHOP_CONFIGURATION_FILE = $SPEC_CHOP_CONFIGURATION_FILE"
fi

if [ ! -r "$SPEC_CHOP_SPEC_INSTALL_DIR/shrc" ]; then
    scError "Unable to read the shrc file in $SPEC_CHOP_SPEC_INSTALL_DIR"
fi

if [ ! -r "$SPEC_CHOP_CHOPSTIX_SETUP_FILE" ]; then
    scError "Unable to read SPEC_CHOP_CHOPSTIX_SETUP_FILE = $SPEC_CHOP_SETUP_FILE"
fi

if [ -n "$SPEC_CHOP_PATH" ]; then
    export PATH="$SPEC_CHOP_PATH:$PATH"
fi
